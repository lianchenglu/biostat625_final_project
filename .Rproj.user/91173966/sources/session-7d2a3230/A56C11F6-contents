rm(list = ls())
gc()
set.seed(123)  # For reproducibility
library(NHANES)
library(car)
df <- NHANES[NHANES$Age >= 18 & NHANES$Age < 60, ]
# colSums(is.na(df)) / nrow(df)
df <- df[, which(colSums(is.na(df)) / nrow(df) < 0.3)]
# colSums(is.na(df)) / nrow(df)
# df$BPSysAve
library(dplyr)

df2 <- df %>% select(
  SleepHrsNight,
  Age,
  DaysMentHlthBad,
  SexNumPartnLife,
  SexNumPartYear,
  Race1,
  Gender,
  HomeRooms,
  AlcoholYear,
  BPDiaAve,
  BPSysAve
)

Hmisc::describe(df2)
df3 <- na.omit(df2)
df3$SleepMinNight <- df3$SleepHrsNight * 60
df3 <- df3[,-which(names(df3) %in% "SleepHrsNight")]
# cor(df3$BPSysAve,df3$BPDiaAve)
psych::describe(df3)
# psych::pairs.panels(df3)
hist(df3$SleepMinNight)
# colSums(is.na(df2)) / nrow(df2)
fit0 <-
  lm(SleepMinNight ~ .,
     data = df3)
step(fit0)
library(olsrr)
ols_step_forward_p(fit0,penter=0.1,details=F)
ols_step_forward_p(fit0,penter=0.05,details=F)
# For fit0
summary(fit0)  # Model Summary
AIC(fit0)  # AIC
BIC(fit0)  # BIC
vif(fit0)  # Variance Inflation Factor
anova(fit0)  # ANOVA Table

# Calculate PRESS Statistic for fit0
press_statistic <- sum((residuals(fit0) / (1 - hatvalues(fit0)))^2)
press_statistic

df3$Gender <- ifelse(df3$Gender == "male", 0, 1)
df3 <- df3 %>%
  mutate(
    Race1 = case_when(
      Race1 == 'Black' ~ 1,
      Race1 == 'Hispanic' ~ 2,
      Race1 == 'Mexican' ~ 3,
      Race1 == 'White' ~ 4,
      Race1 == 'Other' ~ 5,
      TRUE ~ NA_integer_  # Default value if none of the conditions are met
    )
  )


m_full = lm(
  SleepMinNight ~ Age + Gender + factor(Race1) + HomeRooms + SexNumPartnLife +
    SexNumPartYear + AlcoholYear + BPDiaAve + BPSysAve + DaysMentHlthBad,
  data = df3
)

summary(m_full)
anova_full = data.frame(anova(m_full))
anova_full

test_variables = c("Demographic variables", "risk factors" , "DaysMentHlthBad")


ss = c(sum(anova_full[1:3, "Sum.Sq"]), sum(anova_full[4:9, "Sum.Sq"]),
       sum(anova_full[10, "Sum.Sq"]))

test_Statistic = c((ss[1] / 6) / anova_full["Residual", "Mean.Sq"],
                   (ss[2] / 6) / anova_full["Residual", "Mean.Sq"],
                   (ss[3] / 1) / anova_full["Residual", "Mean.Sq"])

Df = c("F(6, 4292)", "F(6,4292)", "F(1,4292)")

p_value = c(
  1 - pf(test_Statistic[1], 6, 4292),
  1 - pf(test_Statistic[2], 6, 4292),
  1 - pf(test_Statistic[3], 1, 4292)
)

decision = c("Reject H0", "Reject H0", "Reject H0")

stopping_rule = c("p < 0.05, next", "p < 0.05, next", "p < 0.05, next")
test_table <-
  data.frame(test_variables,
             ss,
             test_Statistic,
             Df,
             p_value,
             decision,
             stopping_rule)
test_table

library(car)
vif(fit0)

Hmisc::describe(df3$Race1)
dummy_b = 1 * (df3$Race1 == 1)
dummy_h = 1 * (df3$Race1 == 2)
dummy_m = 1 * (df3$Race1 == 3)
dummy_w = 1 * (df3$Race1 == 4)
dummy_o = 1 * (df3$Race1 == 5)
m1 = lm(
  SleepMinNight ~ Age + Gender + dummy_b + dummy_h + dummy_m + dummy_w + dummy_o +
    HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBad,
  data = df3
)
summary(m1)
anova_m1 = data.frame(anova(m1))
anova_m1

test_variables = c("Demographic variables", "risk factors" , "DaysMentHlthBad")

ss = c(sum(anova_m1[1:6, "Sum.Sq"]), sum(anova_m1[7:12, "Sum.Sq"]),
       sum(anova_m1[13, "Sum.Sq"]))

test_Statistic = c((ss[1] / 6) / anova_full["Residual", "Mean.Sq"],
                   (ss[2] / 6) / anova_full["Residual", "Mean.Sq"],
                   (ss[3] / 1) / anova_full["Residual", "Mean.Sq"])

Df = c("F(6, 4292)", "F(6,4292)", "F(1,4292)")

p_value = c(
  1 - pf(test_Statistic[1], 6, 4292),
  1 - pf(test_Statistic[2], 6, 4292),
  1 - pf(test_Statistic[3], 1, 4292)
)

decision = c("Reject H0", "Reject H0", "Reject H0")

stopping_rule = c("p < 0.05, next", "p < 0.05, next", "p < 0.05, next")
test_table <-
  data.frame(test_variables,
             ss,
             test_Statistic,
             Df,
             p_value,
             decision,
             stopping_rule)
test_table
m2 = lm(
  SleepMinNight ~ -1 + Age + Gender + dummy_b + dummy_h + dummy_m + dummy_w +
    dummy_o + HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBad,
  data = df3
)
summary(m2)
anova_m2 = data.frame(anova(m1))
anova_m2

age_quant = quantile(df3$Age)
df3$AgeC = 0
df3$AgeC[df3$Age > age_quant[2] & df3$Age <= age_quant[3]] = 1
df3$AgeC[df3$Age > age_quant[3] & df3$Age <= age_quant[4]] = 2
df3$AgeC[df3$Age > age_quant[4]] = 3

library("gtsummary")
df3 %>% select("SleepMinNight", "AgeC", "Age") %>%
  tbl_summary(
    by = AgeC,
    type = list(SleepMinNight ~ 'continuous', Age ~ 'continuous'),
    statistic = list(all_continuous() ~ "{mean} ({sd}); {median}, {min}, {max}"),
    digits = list(all_continuous() ~ c(2, 2, 0, 0, 0))
  ) %>% bold_labels

attach(df3)
m3 = lm(
  SleepMinNight ~ factor(AgeC) + Gender + dummy_b + dummy_h + dummy_m + dummy_w +
    dummy_o + HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBad,
  data = df3
)
summary(m3)

attach(df3)
df3$DaysMentHlthBadC <-
  (DaysMentHlthBad - mean(DaysMentHlthBad)) / IQR(df3$DaysMentHlthBad)
m3_0 = lm(
  SleepMinNight ~ factor(AgeC) + Gender + dummy_b + dummy_h + dummy_m + dummy_w +
    dummy_o + HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBadC,
  data = df3
)
summary(m3_0)

m3_1 = lm(
  SleepMinNight ~ Age + Gender + dummy_b + dummy_h + dummy_m + dummy_w + dummy_o +
    HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBadC,
  data = df3
)
summary(m3_1)

m3_2 = lm(
  SleepMinNight ~ AgeC + Gender + dummy_b + dummy_h + dummy_m + dummy_w +
    dummy_o + HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBadC,
  data = df3
)
summary(m3_2)

m3_3 = lm(
  SleepMinNight ~ AgeC + Gender + factor(Race1) + HomeRooms + SexNumPartnLife +
    SexNumPartYear + AlcoholYear + BPDiaAve + BPSysAve + DaysMentHlthBadC,
  data = df3
)
summary(m3_3)
scatmatrixData = df3[, c(
  "SleepMinNight",
  "Age",
  "Gender",
  "Race1",
  "DaysMentHlthBad",
  "HomeRooms",
  "SexNumPartnLife",
  "SexNumPartYear",
  "AlcoholYear",
  "BPDiaAve",
  "BPSysAve"
)]
panel.hist <- function(x, ...)
{
  usr <- par("usr")
  on.exit(par(usr))
  par(usr = c(usr[1:2], 0, 1.5))
  h <- hist(x, plot = FALSE)
  breaks <- h$breaks
  nB <- length(breaks)
  y <- h$counts
  y <- y / max(y)
  rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
# pairs(scatmatrixData, pch = 19, diag.panel = panel.hist)

##Pearson correlations
cormat = cor(scatmatrixData)
pres <- corrplot::cor.mtest(scatmatrixData, conf.level = .95)
corrplot::corrplot.mixed(
  cormat,
  lower.col = "black",
  number.cex = 1,
  p.mat = pres$p,
  sig.level = .05
)

# Identify variables with zero standard deviation
zero_sd_vars <- sapply(scatmatrixData, sd) == 0

# Print the names of variables with zero standard deviation
print(names(zero_sd_vars)[zero_sd_vars])
model_agec1 = lm(
  SleepMinNight ~ factor(AgeC) + Gender + dummy_b + dummy_h + dummy_m + dummy_w +
    dummy_o + HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBad + factor(AgeC) * AlcoholYear + factor(AgeC) *
    BPDiaAve + factor(AgeC) * BPSysAve + BPDiaAve * BPSysAve,
  data = df3
)
summary(model_agec1)

model_agec1 = lm(
  SleepMinNight ~ factor(AgeC) + Gender + dummy_b + dummy_h + dummy_m + dummy_w +
    dummy_o + HomeRooms + SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve +
    BPSysAve + DaysMentHlthBad + factor(AgeC) * AlcoholYear + factor(AgeC) *
    BPDiaAve + factor(AgeC) * BPSysAve + BPDiaAve * BPSysAve,
  data = df3
)
summary(model_agec1)

df3$DaysMentHlthBad.m = sqrt(df3$DaysMentHlthBad - mean(DaysMentHlthBad))
df3$HomeRooms.m = log(df3$HomeRooms - mean(HomeRooms))
df3$SleepMinNight.m = (df3$SleepMinNight - mean(SleepMinNight))
model_agec1 = lm(
  SleepMinNight.m ~ factor(AgeC) + Gender + factor(Race1) + HomeRooms.m +
    SexNumPartnLife + SexNumPartYear + AlcoholYear + BPDiaAve + BPSysAve + DaysMentHlthBad.m + factor(AgeC) *
    AlcoholYear++BPDiaAve * BPSysAve + factor(AgeC) * HomeRooms + factor(Race1) *
    HomeRooms + factor(AgeC) * SexNumPartYear + factor(AgeC) * BPDiaAve + factor(AgeC) *
    BPSysAve + AlcoholYear * BPSysAve ,
  data = df3
)
summary(model_agec1)
par(mfrow = c(2, 3)) #read more from ?plot.lm
plot(model_agec1, which = 1)
plot(model_agec1, which = 2)
plot(model_agec1, which = 3)
plot(model_agec1, which = 4)
plot(model_agec1, which = 5)
plot(model_agec1, which = 6)


ols_mallows_cp(model =m3_0, fullmodel =m_full)  # Mallows' Cp
ols_mallows_cp(model =m3_1, fullmodel =m_full)  # Mallows' Cp
ols_mallows_cp(model =m3_2, fullmodel =m_full)  # Mallows' Cp
ols_mallows_cp(model =m3_3, fullmodel =m_full)  # Mallows' Cp
ols_mallows_cp(model =model_agec1, fullmodel =m_full)  # Mallows' Cp


library(caret)
splitIndex <- createDataPartition(df3$SleepMinNight, p = 0.7, list = FALSE)
trainData <- df3[splitIndex, ]
testData <- df3[-splitIndex, ]
predictions <- predict(fit0, newdata = testData)
mse <- mean((testData$SleepMinNight - predictions)^2)
control <- trainControl(method = "cv", number = 10)  # 10-fold cross-validation
cv_model <- train(SleepMinNight ~ ., data = df3, method = "lm", trControl = control)
cv_model
(cv_results <- cv_model$results)


